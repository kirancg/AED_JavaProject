/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.OrganBankRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.OrganOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.organBankWorkRequest;
import Business.WorkQueue.WorkRequest;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.sun.corba.se.impl.presentation.rmi.IDLTypesUtil;
import java.awt.CardLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.DocumentListener;
import javax.swing.event.UndoableEditListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;

import javax.swing.text.Element;
import javax.swing.text.Position;
import javax.swing.text.Segment;
import userinterface.DoctorRole.SendMailUsingAuthentication;


/**
 *
 * @author Charan
 */
public class OrganWorkAreaJPanel extends javax.swing.JPanel {

    
    private JPanel userProcessContainer;
    private OrganOrganization organOrganization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem business;
    public static final Pattern VALID_EMAIL_ADDRESS_REGEX
            = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
    /**
     * Creates new form OrganWorkAreaJPanel
     */
    public OrganWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, OrganOrganization organOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.organOrganization= organOrganization;
        this.enterprise = enterprise;
        this.business = business;
        
        populateRegisterTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        organTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        pdf_btn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(153, 0, 0));

        organTable.setBackground(new java.awt.Color(153, 0, 0));
        organTable.setForeground(new java.awt.Color(255, 255, 255));
        organTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "DateOfBirth", "Sex", "Email", "status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        organTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        organTable.setGridColor(new java.awt.Color(255, 255, 255));
        organTable.setSelectionBackground(new java.awt.Color(230, 131, 131));
        jScrollPane1.setViewportView(organTable);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Organ Bank");

        pdf_btn.setBackground(new java.awt.Color(204, 204, 0));
        pdf_btn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pdf_btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/pdf.png"))); // NOI18N
        pdf_btn.setText("Generate a PDF ");
        pdf_btn.setActionCommand("Generate a PDF");
        pdf_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pdf_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(316, 316, 316)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pdf_btn))))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(pdf_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    private void pdf_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pdf_btnActionPerformed
        String path = "";
        JFileChooser j = new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x = j.showSaveDialog(this);
        
        if(x == JFileChooser.APPROVE_OPTION )
        {
            path = j.getSelectedFile().getPath();
            System.out.println(path);
        }
        
        Document doc = new Document() ;
           
        try {
            
            
            
            PdfWriter.getInstance(doc, new FileOutputStream(path+"\\abc.pdf"));
            doc.open();
            PdfPTable tbl = new PdfPTable(4);
            
            //addingHeader
            tbl.addCell("Name");
            tbl.addCell("DateOfBirth");
            tbl.addCell("Sex");
            tbl.addCell("Email");
            
            for(int i = 0 ; i< organTable.getRowCount();i++)
            {
                   String name = organTable.getValueAt(i, 0).toString();
                   String dob = organTable.getValueAt(i, 1).toString();
                   String sex = organTable.getValueAt(i, 2).toString();
                   String email = organTable.getValueAt(i, 3).toString();
                   
                   tbl.addCell(name);
                   tbl.addCell(dob);
                   tbl.addCell(sex);
                   tbl.addCell(email);
                   
                   
                   
                
                
            }
            
            doc.add(tbl);
            
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(OrganWorkAreaJPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(OrganWorkAreaJPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        doc.close();
    }//GEN-LAST:event_pdf_btnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable organTable;
    private javax.swing.JButton pdf_btn;
    // End of variables declaration//GEN-END:variables

    private void populateRegisterTable() {
         DefaultTableModel model = (DefaultTableModel) organTable.getModel();

 

        model.setRowCount(0);
        for (WorkRequest request : organOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[5];
           organBankWorkRequest organWorkRequest = (organBankWorkRequest) request;
                    
                    row[0] = organWorkRequest.getName();
                    row[1] = organWorkRequest.getDateOfBirth();
                    row[2] = organWorkRequest.getSex();
                    row[3] = organWorkRequest.getEmailOfUserToOrgan();
                    row[4] = organWorkRequest.getStatus();

                    model.addRow(row);
                
            }
        }
}
    
    
    
    
    
