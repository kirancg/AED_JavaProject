/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.UserRole;

import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.BloodBankEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.OrganBankEnterprise;
import Business.Network.Network;
import Business.Organization.BloodBankOrganization;
import Business.Organization.OrganOrganization;
import Business.Organization.Organization;
import Business.Organization.UserOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.BloodBankWorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;



/**
 *
 * @author Charan
 */
public class UserToBloodBankJPanel extends javax.swing.JPanel {

    /**
     * Creates new form UserToBloodBankJPanel
     */
   
    private JPanel userProcessContainer;
    private UserAccount userAccount;
    private UserOrganization userOrganization;
    private Enterprise enterprise;
    private EcoSystem business;
    public static final Pattern VALID_EMAIL_ADDRESS_REGEX
            = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
    private DB4OUtil db40util = DB4OUtil.getInstance();

    public UserToBloodBankJPanel(Enterprise enterprise,JPanel userProcessContainer,UserAccount userAccount,UserOrganization userOrganization,EcoSystem business) {
        initComponents();
        this.enterprise = enterprise;
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.userOrganization = userOrganization;
        this.business = business;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        blood_bloodGrpJComboBox = new javax.swing.JComboBox<>();
        blood_genderJComboBox = new javax.swing.JComboBox<>();
        blood_ageTextField = new javax.swing.JTextField();
        blood_mobileTextField = new javax.swing.JTextField();
        blood_heightTextField = new javax.swing.JTextField();
        blood_emailTextField = new javax.swing.JTextField();
        blood_weightTextField = new javax.swing.JTextField();
        blood_nameTextField = new javax.swing.JTextField();
        blood_reqBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 0));
        jLabel1.setText("Blood Donation");

        jLabel2.setText("Name:");

        jLabel3.setText("Weight:");

        jLabel4.setText("Age:");

        jLabel5.setText("Height:");

        jLabel6.setText("Gender:");

        jLabel7.setText("Blood Group:");

        jLabel8.setText("Email:");

        jLabel9.setText("Mobile Number:");

        blood_bloodGrpJComboBox.setBackground(new java.awt.Color(255, 0, 0));
        blood_bloodGrpJComboBox.setForeground(new java.awt.Color(255, 255, 255));
        blood_bloodGrpJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A positive", "A negative", "B positive", "B negative", "O positive", "O negative", "AB positive", "AB negative" }));
        blood_bloodGrpJComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        blood_genderJComboBox.setBackground(new java.awt.Color(255, 0, 0));
        blood_genderJComboBox.setForeground(new java.awt.Color(255, 255, 255));
        blood_genderJComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));
        blood_genderJComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        blood_reqBtn.setBackground(new java.awt.Color(102, 0, 0));
        blood_reqBtn.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        blood_reqBtn.setForeground(new java.awt.Color(255, 255, 255));
        blood_reqBtn.setText("Request For Donation");
        blood_reqBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        blood_reqBtn.setMargin(new java.awt.Insets(2, 5, 2, 5));
        blood_reqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blood_reqBtnActionPerformed(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/Donate-Blood.jpg"))); // NOI18N

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(51, 153, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/images/back_icon.png"))); // NOI18N
        jButton1.setText("Back");
        jButton1.setMargin(new java.awt.Insets(2, 5, 2, 5));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(354, 354, 354)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(blood_weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5)
                                        .addGap(39, 39, 39))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(blood_emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(blood_nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel9)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(blood_genderJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel7)
                                        .addGap(12, 12, 12))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(blood_bloodGrpJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blood_mobileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blood_heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(blood_ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton1)
                        .addGap(201, 201, 201)
                        .addComponent(blood_reqBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(blood_nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(blood_ageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(blood_heightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blood_weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(blood_bloodGrpJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blood_genderJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(blood_mobileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(blood_emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(114, 114, 114)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(blood_reqBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(71, 71, 71)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void blood_reqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blood_reqBtnActionPerformed
        // TODO add your handling code here:
        
        if ((!blood_nameTextField.getText().equals("")) && (!blood_ageTextField.getText().equals("")) && (!blood_heightTextField.getText().equals(""))
            && (!blood_weightTextField.getText().equals(""))
            && (!blood_mobileTextField.getText().equals(""))) {

            boolean isError = false;
             try {
                String name = blood_nameTextField.getText();
                System.out.println("size" + enterprise.getOrganizationDirectory().getOrganizationList().size());
                BloodBankWorkRequest bloodrequest = new BloodBankWorkRequest();
                bloodrequest.setName(blood_nameTextField.getText());
                bloodrequest.setGender(blood_genderJComboBox.getSelectedItem().toString());
                bloodrequest.setBloodGroup(blood_bloodGrpJComboBox.getSelectedItem().toString());
                bloodrequest.setAge(blood_ageTextField.getText());
                bloodrequest.setHeight(blood_heightTextField.getText());
                bloodrequest.setWeight(blood_weightTextField.getText());
                bloodrequest.setMobileNumber(blood_mobileTextField.getText());
                
                boolean isValidEmail = validate(blood_emailTextField.getText());
                
                if(!isValidEmail)
                {
                    JOptionPane.showMessageDialog(null, "Please enter a valid email address", "Warning", JOptionPane.WARNING_MESSAGE);
                }
                
                bloodrequest.setEmailtoBlood(blood_emailTextField.getText());
                
                
                 bloodrequest.setSender(userAccount);
                bloodrequest.setStatus("Sent");
                db40util.storeSystem(business);
                 Organization org = null;

                for (Network network : business.getNetworkList()) {
                    for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (enterprise instanceof BloodBankEnterprise) {
                            for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                                if (organization instanceof BloodBankOrganization) {
                                    org = organization;
                                    break;
                                }
                            }
                        }

                    }
                }

                if (org != null) {
                    //System.out.println("userinterface.Farmer.RequestDoctorTreatmentWorkAreaJPanel.requestTestJButtonActionPerformed()");
                    org.getWorkQueue().getWorkRequestList().add(bloodrequest);
                    userAccount.getWorkQueue().getWorkRequestList().add(bloodrequest);

                    JOptionPane.showMessageDialog(null, "You have successfully registered as an Blood Donar!", "Information", JOptionPane.INFORMATION_MESSAGE);
                }

                // }
        } catch (Exception e3) {
            isError = true;
            JOptionPane.showMessageDialog(null, "Please input the details in proper format", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        } else {
            JOptionPane.showMessageDialog(null, "Fill all the mandatory fields marked with a * ", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_blood_reqBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        UserWorkAreaJPanel ftdwjp = (UserWorkAreaJPanel) component;
       // ftdwjp.populateRequestTable();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed
    
   
    public static boolean validate(String emailstr)
    {
      if (emailstr == null) {
            return false;
        }
        Matcher matcher = VALID_EMAIL_ADDRESS_REGEX.matcher(emailstr);
        return matcher.find();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField blood_ageTextField;
    private javax.swing.JComboBox<String> blood_bloodGrpJComboBox;
    private javax.swing.JTextField blood_emailTextField;
    private javax.swing.JComboBox<String> blood_genderJComboBox;
    private javax.swing.JTextField blood_heightTextField;
    private javax.swing.JTextField blood_mobileTextField;
    private javax.swing.JTextField blood_nameTextField;
    private javax.swing.JButton blood_reqBtn;
    private javax.swing.JTextField blood_weightTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    // End of variables declaration//GEN-END:variables
}
